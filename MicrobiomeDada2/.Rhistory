load("~/Documents/Today/.RData")
load("~/Documents/Today/.RData")
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeDada2")
library(dada2)
sequences <- sequences
sequences <- "sequences"
sequences <- "sequences"
list.files(sequences)
path <- "sequences"
list.files(path)
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeDada2")
library(dada2)
path <- "sequences"
list.files(path)
path <- "sequences"
list.files(path)
# Forward fastq filenames have format: SAMPLENAME_R1_001.fastq and SAMPLENAME_R2_001.fastq
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
# Extract sample names, assuming filenames have format: SAMPLENAME_XXX.fastq
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:2])
# Place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
names(filtFs) <- sample.names
#quality decreses at 120
out <- filterAndTrim(fnFs, filtFs,  truncLen=c(120),
maxN=0, maxEE=c(2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE) # On Windows set multithread=FALSE
head(out)
errF <- learnErrors(filtFs, multithread=TRUE)
#visulaize error rate
plotErrors(errF, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=TRUE)
#change mergers to dadaFs because no paired reads
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
#change mergers to dadaFs because no paired reads
seqtab <- makeSequenceTable(dadaFs)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out,  getN(dadaFs), rowSums(seqtab.nochim))
getN <- function(x) sum(getUniques(x))
track <- cbind(out,  sapply(dadaFs, getN), rowSums(seqtab.nochim))
# If processing a single sample, remove the sapply calls: e.g. replace sapply(dadaFs, getN) with getN(dadaFs)
colnames(track) <- c("input", "filtered", "denoisedF", "nonchim")
rownames(track) <- sample.names
head(track)
save(seqtab.nochim, file= "RDatata/seqtab.nochim.RData")
save(seqtab.nochim, file= "RDatata/seqtab.nochimRData")
save(seqtab.nochim, file= "RDatata/seqtab.nochim.RData")
save(seqtab.nochim, file= "RData/seqtab.nochim.RData")
