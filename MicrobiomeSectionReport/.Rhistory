load("~/Documents/Today/.RData")
load("~/Documents/Today/.RData")
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeDada2")
save(seqtab.nochim, file= "RData/seqtab.nochim.RData")
load("RData/seqtab.nochim.RData")
#downlaod the file https://zenodo.org/records/4587955
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz" )
library(dada2)
#downlaod the file https://zenodo.org/records/4587955
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz" )
save.(taxa, file = "RData/taxa.RData")
save(taxa, file = "RData/taxa.RData")
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeDada2")
source('http://bioconductor.org/biocLite.R')
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
source('http://bioconductor.org/biocLite.R')
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
install.packages("BiocManager")
source('http://bioconductor.org/biocLite.R')
R.version.string
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "4.3.2")
install.packages("BiocManager")
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "4.3")
install.packages("BiocManager")
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
install.packages("BiocManager")
source('http://bioconductor.org/biocLite.R')
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
install.packages("BiocManager")
source('http://bioconductor.org/biocLite.R')
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.18")
install.packages("BiocManager")
source('http://bioconductor.org/biocLite.R')
source("https://raw.githubusercontent.com/joey711/phyloseq/master/inst/scripts/installer.R",
local = TRUE
(!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
packageVersion('phyloseq')
library(phyloseq)
load("RData/taxa.RData")
load("RData/seqtab.nochim.RData")
metadata <- read.csv("metadata.csv", header+TRUE, row.names = 1)
metadata<- read.csv("metadata.csv", header+TRUE, row.names = 1)
metadata <- read.csv("sample-metadata.csv", header+TRUE, row.names = 1)
metadata <- read.csv("sample-metadata.csv", header=TRUE, row.names = 1)
#make sure the seqtab.nochim and taxa objects are loaded
phyloseq <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE), sample_data(metadata), tax_table(taxa)) phyloseq
#make sure the seqtab.nochim and taxa objects are loaded
phyloseq <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE), sample_data(metadata), tax_table(taxa))
#make sure the seqtab.nochim and taxa objects are loaded
physeq <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE), sample_data(metadata),tax_table(taxa))
physeq
#convert from raw to abundance
physeq <- transform_sample_counts(physeq, function(abund) 1*(abund>0))
physeq
dna <- Biostrings::DNAStringSet(taxa_names(physeq))
names(dna) <- taxa_names(physeq)
physeq <- merge_phyloseq(physeq, dna)
taxa_names(physeq) <- paste0("ASV", seq(ntaxa(physeq)))
physeq
#stictly use bacteria 16S rRNA,
physeq <- %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) )
library(phyloseq)
library(dpylr)
library(phyloseq)
library(dplyr)
#stictly use bacteria 16S rRNA,
physeq <- %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) )
#stictly use bacteria 16S rRNA,
physeq <- %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) )
library(phyloseq)
library(dplyr)
library(magrittr)
#stictly use bacteria 16S rRNA,
physeq <- %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) )
#stictly use bacteria 16S rRNA,
physeq <- %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) )
#stictly use bacteria 16S rRNA,
physeq <- physeq %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order))
library(phyloseq)
library(dplyr)
#stictly use bacteria 16S rRNA,
physeq <- physeq %>% subset_taxa(Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order))
#stictly use bacteria 16S rRNA,
physeq <- physeq %>% subset_taxa( Family! = "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order))
#stictly use bacteria 16S rRNA,
physeq <- physeq %>% subset_taxa( Family!= "Mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order))
physeq
physeq <-rm_nonbac(physeq)
physeq<-rm_nonbac(physeq)
View(seqtab.nochim)
View(taxa)
install.packages("remotes")
remotes::install_github("peterolah001/BiMiCo")
library(phyloseq)
library(dplyr)
library(BiMico)
library(phyloseq)
library(dplyr)
library(BiMiCo)
physeq<-rm_nonbac(physeq)
physeq
save(physeq, file= "RData/physeq.RData")
View(taxa)
R.version.string
setwd("/Users/valenzuelajanaa/Library/Mobile Documents/com~apple~CloudDocs/Research Methods/Correlation ")
data_13.1 <- read.csv("EX13.1.csv")
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
# Generate some sample data
data <- rnorm(data_13.1$Systolic)
# Shapiro-Wilk Test
shapiro_test <- shapiro.test(data)
print(shapiro_test)
# Generate some sample data
data <- rnorm(data_13.1$Systolic)
data <- rnorm(data_13.1$Diastolic)
# Shapiro-Wilk Test
shapiro_test <- shapiro.test(data)
print(shapiro_test)
# Generate some sample data
data <- rnorm(data_13.1$Systolic)
data <- rnorm(data_13.1$Diastolic)
# Shapiro-Wilk Test
shapiro_test <- shapiro.test(data_13.1$Systolic)
shapiro_test <- shapiro.test(data_13.1$Diastolic)
print(shapiro_test)
# Generate some sample data
data <- rnorm(data_13.1$Systolic)
data <- rnorm(data_13.1$Diastolic)
# Shapiro-Wilk Test
shapiro_test <- shapiro.test(data_13.1$Systolic)
shapiro_test <- shapiro.test(data_13.1$Diastolic)
print(shapiro_test)
# Generate some sample data
data <- rnorm(data_13.1$Systolic)
data <- rnorm(data_13.1$Diastolic)
# Shapiro-Wilk Test
shapiro_test1 <- shapiro.test(data_13.1$Systolic)
shapiro_test2 <- shapiro.test(data_13.1$Diastolic)
print(shapiro_test1)
print(shapiro_test2)
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
#Shapiro-Wilk Test
shapiro_test1 <- shapiro.test(data_13.1$Systolic)
shapiro_test2 <- shapiro.test(data_13.1$Diastolic)
print(shapiro_test1)
print(shapiro_test2)
data_13.4 <- read.csv("EX13.4.csv")
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
View(data_13.4)
#Shapiro-Wilk Test
shapiro_test3 <- shapiro.test(data_13.4$Size)
shapiro_test4 <- shapiro.test(data_13.4$Activity_change)
print(shapiro_test3)
print(shapiro_test4)
library(ggpubr)
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
p <- ggscatter(data_13.1, x = "Systolic", y = "Diastolic", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson", xlab = "Systolic (#)", ylab = "Diastolic", main = "Correlation Test")
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
p <- ggscatter(data_13.1, x = "Systolic", y = "Diastolic", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson", xlab = "Systolic (#)", ylab = "Diastolic", main = "Correlation Test")
p + theme(plot.title = element_text(hjust = 0.5, face = "bold"))
cor_test_spearman <- cor.test(data_13.4$Size, data_13.4$Acitivty_change, method = "spearman")
cor_test_spearman <- cor.test(data_13.4$Size, data_13.4$Acitivty_change, method = "spearman")
cor_test_spearman <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method = "spearman")
cor_test_spearman <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method = c("spearman")
print(cor_test_spearman)
cor.test_spearman <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method = c("spearman")
print(cor_test_spearman)
cor.test <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method = c("spearman")
print(cor_test_spearman)
cor.test <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method=c("spearman")
print(cor_test_spearman)
cor.test <- cor.test(data_13.4$Size,data_13.4$Acitivty_change, method=c("spearman"))
cor.test <- cor.test(data_13.4$Size,data_13.4$Activity_change, method=c("spearman"))
print(cor_test_spearman)
cor.test <- cor.test(data_13.4$Size,data_13.4$Activity_change, method=c("spearman"))
cor.test <- cor.test(data_13.4$Size, data_13.4$Activity_change, method=c("spearman"))
cor.test <- cor.test(data_13.4$Size, data_13.4$Activity_change, method=c("spearman"))
print(cor.test)
cor.test <- cor.test(data_13.4$Size, data_13.4$Activity_change, method=c("spearman"))
print(cor.test)
p <- ggscatter(data_13.1, x = "Size", y = "Activity_change", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman", xlab = "Size", ylab = "Activity_change", main = "Correlation Test")
p + theme(plot.title = element_text(hjust = 0.5, face = "bold"))
cor.test <- cor.test(data_13.4$Size, data_13.4$Activity_change, method=c("spearman"))
print(cor.test)
p <- ggscatter(data_13.4, x = "Size", y = "Activity_change", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "spearman", xlab = "Size", ylab = "Activity_change", main = "Correlation Test")
p + theme(plot.title = element_text(hjust = 0.5, face = "bold"))
cor.test(data_13.1$Systolic, data_13.1$Diastolic, method=c("pearson"))
p <- ggscatter(data_13.1, x = "Systolic", y = "Diastolic", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson", xlab = "Systolic", ylab = "Diastolic", main = "Correlation Test")
p + theme(plot.title = element_text(hjust = 0.5, face = "bold"))
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeSectionReport")
library(dada2)
library(Biostrings)
library(ShortRead)
library(phyloseq)
library(dplyr)
library(BiMiCo)
path <- "sequences"
list.files(path)
fnFs <- sort(list.files(path, pattern="_R1_001.fastq", full.names = TRUE))
fnRs <- sort(list.files(path, pattern="_R2_001.fastq", full.names = TRUE))
#extract file names
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 1)
plotQualityProfile(fnFs[1:6])
plotQualityProfile(fnRs[1:6])
#place filtered files in filtered/ subdirectory
filtFs <- file.path(path, "filtered", paste0(sample.names, "_F_filt.fastq.gz"))
filtRs <- file.path(path, "filtered", paste0(sample.names, "_R_filt.fastq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(130,130),
maxN=0, maxEE=c(2,2), truncQ=2, rm.phix=TRUE,
compress=TRUE, multithread=TRUE) # On Windows set multithread=FALSE
head(out)
##learn error rates of forward and reverse reads
errF <- learnErrors(filtFs, multithread=TRUE)
errR <- learnErrors(filtRs, multithread=TRUE)
plotErrors(errF, nominalQ=TRUE)
plotErrors(errR, nominalQ=TRUE)
dadaFs <- dada(filtFs, err=errF, multithread=TRUE)
dadaRs <- dada(filtRs, err=errR, multithread=TRUE)
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose=TRUE)
# Inspect the merger data.frame from the first sample
head(mergers[[1]])
seqtab <- makeSequenceTable(mergers)
dim(seqtab)
# Inspect distribution of sequence lengths
table(nchar(getSequences(seqtab)))
seqtab.nochim <- removeBimeraDenovo(seqtab, method="consensus", multithread=TRUE, verbose=TRUE)
dim(seqtab.nochim)
getN <- function(x) sum(getUniques(x))
track <- cbind(out, sapply(dadaFs, getN), sapply(dadaRs, getN), sapply(mergers, getN), rowSums(seqtab.nochim))
colnames(track) <- c("input", "filtered", "denoisedF", "denoisedR", "merged", "nonchim")
rownames(track) <- sample.names
head(track)
save(seqtab.nochim, file= "RData/seqtab.nochim.RData")
load("RData/seqtab.nochim.RData")
list.files("/Users/valenzuelajanaa/tax/")
taxa <- assignTaxonomy(seqtab.nochim, "~/tax/silva_nr_v132_train_set.fa.gz", multithread=TRUE)
View(seqtab.nochim)
load("RData/seqtab.nochim.RData")
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz", multithread=TRUE)
setwd("/Volumes/Janaa/Bioinformatics/MicrobiomeSectionReport")
library(dada2)
library(Biostrings)
library(ShortRead)
library(phyloseq)
library(dplyr)
library(BiMiCo)
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz", multithread=TRUE)
save(taxa, file = "RData/taxa.RData")
taxa <- assignTaxonomy(seqtab.nochim, "silva_nr99_v138.1_wSpecies_train_set.fa.gz", multithread=TRUE)
View(taxa)
View(taxa)
View(taxa)
View(taxa)
View(taxa)
View(taxa)
save(taxa, file = "RData/taxa.RData")
list(taxa)
